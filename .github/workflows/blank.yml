# This is a basic workflow to help you get started with Actions

name: Blank

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo $({{secrets.DOCKER_USERNAME}})
        
      - name: Build Dockerfile
        # run: docker build --tag ${{secrets.DOCKER_USERNAME}}/hello-world-nginx:v1 .
        run: docker build --tag ghrc.io/nathansegers/gh-actions-nginx:1.0.0 .

      - name: Run Dockerfile
        run: |
             docker stop gh-actions-test
             docker run -d --rm -p 8010:80 gh-actions-test ghrc.io/nathansegers/gh-actions-nginx:1.0.0

      #Install Kubectl if needed
      - name: Install Kubectl
        run: |
             # Install kubectl binary using curl
             curl.exe -LO "https://dl.k8s.io/release/v1.27.0/bin/windows/amd64/kubectl.exe"
             
             # Download the kubectl checksum file
             curl.exe -LO "https://dl.k8s.io/v1.27.0/bin/windows/amd64/kubectl.exe.sha256"
             
             # validate the binary
             CertUtil -hashfile kubectl.exe SHA256
             type kubectl.exe.sha256
             
             # Using PowerShell to automate the verification using the -eq operator to get a True or False result:
             $(Get-FileHash -Algorithm SHA256 .\kubectl.exe).Hash -eq $(Get-Content .\kubectl.exe.sha256)
             
             kubectl version --output=yaml

      - name: Kubectl tests
        run: |
             kubectl get pods
             kubectt get services

            

      # # Runs a set of commands using the runners shell
      # - name: Build the image
      #   run: docker build --tag hello-world-nginx:v1 .

      # - name: Start a container
      #   run: docker run -d --rm -p 8080:80/tcp docker.io/library/hello-world-nginx:v1 
      
      # - name: actions-curl
      #   run: curl -UseBasicParsing 127.0.0.1:8080